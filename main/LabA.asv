close all
clear all
clc

font_label = 14;
numPoints = 100;
dimensions = 2;

addpath("..\scripts\");
addpath("..\scripts\EA Toolbox");
addpath("..\scripts\evaluation\");
addpath("..\scripts\Hypervolume");
addpath("..\scripts\Mex files");
addpath("..\scripts\sampling");
rng(2024, "twister");

%% 4.1 - generate sampling plans

% full factorial
X_ff = log(fullfactorial([10 10],0)+1);
% latin hypercube
X_rlh = log(rlh(numPoints,dimensions,0)+1);
% sobol sequence
X_sobol = net(sobolset(dimensions),numPoints);

% Initialize the color matrices
c_ff = colorvar(X_ff(:,1),X_ff(:,2));
c_rlh = colorvar(X_rlh(:,1),X_rlh(:,2));
c_sobol = colorvar(X_sobol(:,1),X_sobol(:,2));

figure(1)
scatter(X_ff(:,1),X_ff(:,2),20,c_ff, 'filled')
ylabel("$K_p$",'Interpreter','latex', 'FontSize',font_label)
xlabel("$K_i$",'Interpreter','latex', 'FontSize',font_label)
grid on
figure(2)
scatter(X_rlh(:,1),X_rlh(:,2),20,c_rlh, 'filled')
ylabel("$K_p$",'Interpreter','latex', 'FontSize',font_label)
xlabel("$K_i$",'Interpreter','latex', 'FontSize',font_label)
grid on
figure(3)
scatter(X_sobol(:,1),X_sobol(:,2),20,c_sobol, 'filled')
ylabel("$K_p$",'Interpreter','latex', 'FontSize',font_label)
xlabel("$K_i$",'Interpreter','latex', 'FontSize',font_label)
grid on

%% 4.2 - assess sampling plan
Phiq_ff = mmphi(X_ff, 1, 1)
Phiq_rlh = mmphi(X_rlh, 1, 1)
Phiq_sobol = mmphi(X_sobol, 1, 1)

performance_criteria = {
'Kp',
'Ki',
'max closed-loop pole',
'gain margin',
'phase margin',
'10-90% rise time (s)',
'peak time (s)',
'overshoot (% points)',
'undershoot (% points)',
'2% settling time (s)',
'steady-state error (% points))',
'aggregate control input (MJ)}'};

criteria_latex = {
'$K_p$',
'$K_i$',
'$max closed-loop pole$',
'$GM$',
'$PM$',
'$t_{10-90%}(s)$',
'$t_{peak} (s)$',
'$overshoot (% points)$',
'$undershoot (% points)$',
'$t_{2% settling} (s)$',
'$error_{steady-state} (% points))$',
'$u (MJ)$}'};

% preprocess gain margin and phase margins
P_ff = generatePopulation(X_ff);
P_rlh = generatePopulation(X_rlh);
P_sobol = generatePopulation(X_sobol);

% create tables for parallelplots
tab_ff = sortrows(array2table(P_ff, 'VariableNames', performance_criteria),1);
tab_rlh = sortrows(array2table(P_rlh, 'VariableNames', performance_criteria),1);
tab_sobol = sortrows(array2table(P_sobol, 'VariableNames', performance_criteria),1);

%% Plot the parallel coordinates with custom colors for each group
figure(4)
set(gcf,'Position',[100 100 500 400])
p1 = parallelplot(tab_ff, 'GroupVariable', "Kp", 'Color', sortrows(c_ff,3),'DataNormalization','range');
p1.LegendVisible = 'off';
S1 = struct(p1);
S1.Axes.TickLabelInterpreter='latex';
S1.Axes.XTickLabel = criteria_latex;
grid on;

figure(5)
set(gcf,'Position',[100 100 500 400])
p2 = parallelplot(tab_rlh, 'GroupVariable', "Kp", 'Color', sortrows(c_rlh,3),'DataNormalization','range');
p2.LegendVisible = 'off';
S2 = struct(p2);
S2.Axes.TickLabelInterpreter='latex';
S2.Axes.XTickLabel = criteria_latex;
grid on;

figure(6)
set(gcf,'Position',[100 100 500 400])
p3 = parallelplot(tab_sobol, 'GroupVariable', "Kp", 'Color', sortrows(c_sobol,3),'DataNormalization','range');
p3.LegendVisible = 'off';
S3 = struct(p3);
S3.Axes.TickLabelInterpreter='latex';
S3.Axes.XTickLabel = criteria_latex;
grid on;
